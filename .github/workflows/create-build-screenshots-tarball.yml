# This is a basic workflow to help you get started with Actions

name: build-screenshots-tarball

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "4.30" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      build-screenshots-branch:
        description: "Branch to use for build-screenshots"
        default: "4.30"
        required: true
      logLevel:
        description: 'Log level'
        required: true
        default: 'debug'
        type: choice
        options:
        - info
        - warning
        - debug

env:
  workdir: archives
  tarball-name: build-screenshots
  version: "4.30"
  
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Set the version date
        id: version_timestamp
        run: echo "version_date=$(date '+%Y-%m-%d')" >> "$GITHUB_ENV"
      - name: Set the file name
        id: file_identifier
        run: echo "tarball_name=${{ env.tarball-name }}-${{ env.version }}-$version_date.tar.gz"  >> "$GITHUB_ENV"
      - name: Output file name
        id: output_file_name
        run: echo "$tarball_name"
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout build-screenshots branch
        uses: actions/checkout@v3
        with:
          path: ${{ env.workdir }}
          ref: ${{ github.event.inputs.build-screenshots-branch }}
      # Runs a single command using the runners shell
      - name: Compress screenshots action step
        uses: a7ul/tar-action@v1.1.0
        id: compress
        with:
          cwd: ${{ env.workdir }}
          command: c
          files: |
            ./images
            README.md
          outPath: $tarball-name
      # Use the output from the `compress` step
      - name: Get the output
        run: echo "The output was ${{ steps.compress.outputs.done }}"
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: "${{ env.version }}-$version_date"
          tag_name: ${{ github.ref }}
          body: "Release ${{ env.version }}"
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload tarball artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: $tarball-name
          asset_name: $tarball-name
          asset_content_type: application/gzip

